"""
Django settings for journalingdjango project.

Generated by 'django-admin startproject' using Django 5.2.4.
"""

from pathlib import Path
from dotenv import load_dotenv
import os
import socket
import psycopg2
import dj_database_url
import mimetypes


load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")


# Define general behavior variables for DJANGO_HOST and all others
if os.getenv("DJANGO_HOST") == "production":
    DEBUG = False
    STATIC_URL = '/static'
    STATIC_ROOT = BASE_DIR / 'static/'

else:
    DEBUG = True
    STATIC_URL = '/static/'


# Production Whitenoise Mime Types
WHITENOISE_MIMETYPES = {
    '.xsl': 'application/xml',
    '.css': 'text/css',
}


# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
#os.getenv("DJANGO_DEBUG")

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'better-days-coming.onrender.com', 'https://better-days-coming.onrender.com/', 'onrender.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main_app',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'ckeditor',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'journalingdjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'journalingdjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv("DJANGO_DATABASE_URL"),
        'NAME': os.getenv("DJANGO_DATABASE_NAME"),
        'USER': os.getenv("DJANGO_DATABASE_USER"),
        'PASSWORD':os.getenv("DJANGO_DATABASE_PASSWORD"),
        'HOST': os.getenv("DJANGO_DATABASE_HOST"),
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

USE_TZ = True

TIME_ZONE = "America/Los_Angeles"

USE_I18N = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STORAGES = {
        "staticfiles": {
            "BACKEND": "whitenoise.storage.CompressedStaticFilesStorage",
        },
    }


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'main_app.CustomUser'

# Custom Adapter for Getting Data Through Google OAuth 2.0
SOCIALACCOUNT_ADAPTER = 'main_app.adapters.CustomSocialAccountAdapter'


# Specific Authentication Backends
AUTHENTICATION_BACKENDS = {
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
}

# Social Account Connections
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = 'GOOGLE_CLIENT_ID'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'GOOGLE_SECRET'



# Google OAuth Provider Settings
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}

# Django allauth Configurations
SITE_ID = 1
ACCOUNT_EMAIL_VERIFICATION = 'none'
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2']
ACCOUNT_LOGIN_METHODS = {'username'}

LOGIN_REDIRECT_URL = '/'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Rich Text Editor Configurations
CKEDITOR_CONFIGS = {
    'default':  {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            [ 'Font', 'FontSize', 'TextColor', 'BGColor' ],
            [ 'Bold', 'Italic', 'Underline', 'Subscript', 'Superscript' ],
            [ 'Undo', 'Redo' ],
            [ 'Indent', 'Outdent' ],
            [ 'JustifyBlock', 'JustifyCenter', 'JustifyLeft', 'JustifyRight' ],
            [ 'BulletedList', 'NumberedList' ],
            [ 'Smiley', 'SpecialChar' ]
        ],
        'removePlugins': 'ajax,autoembed,devtools,elementspath,filetools,image,image2,sourcedialog,stylesheetparser,table,tableresize,tabletools,uploadimage,uploadwidget'
    }
}

CKEDITOR_ALLOW_NONIMAGE_FILES = False
